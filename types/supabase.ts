// This file would typically be generated by `supabase gen types typescript > types/supabase.ts`
// For now, let's define the types we are using manually.

export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          full_name: string | null
          avatar_url: string | null
          phone_number: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          full_name?: string | null
          avatar_url?: string | null
          phone_number?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          full_name?: string | null
          avatar_url?: string | null
          phone_number?: string | null
          created_at?: string
          updated_at?: string
        }
      }
      wallets: {
        Row: {
          id: string
          user_id: string
          currency_code: string
          balance: number // Supabase returns numeric as number or string, cast to number
          locked_balance: number // Same as balance
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          currency_code: string
          balance?: number
          locked_balance?: number
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          currency_code?: string
          balance?: number
          locked_balance?: number
          created_at?: string
          updated_at?: string
        }
      }
      transactions: {
        Row: {
          id: string
          user_id: string
          wallet_id: string | null
          type: "deposit" | "withdrawal" | "exchange_buy" | "exchange_sell" | "fee" | "refund"
          status: "pending" | "completed" | "failed" | "cancelled"
          amount: number
          currency_code: string
          description: string | null
          related_offer_id: string | null
          external_transaction_id: string | null
          created_at: string
          updated_at: string
        }
        // Add Insert and Update types as needed
      }
      kyc_requests: {
        Row: {
          id: string
          user_id: string
          status: "pending_submission" | "pending_review" | "approved" | "rejected"
          bvn_number: string | null
          id_document_type: "bvn" | "national_id" | "passport" | "drivers_license" | "selfie" | null
          id_document_url: string | null
          selfie_url: string | null
          rejection_reason: string | null
          submitted_at: string | null
          reviewed_by: string | null
          reviewed_at: string | null
          created_at: string
          updated_at: string
        }
        // Add Insert and Update types as needed
      }
      // Add other tables like offers, admin_logs if needed for types
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      transaction_type: "deposit" | "withdrawal" | "exchange_buy" | "exchange_sell" | "fee" | "refund"
      transaction_status: "pending" | "completed" | "failed" | "cancelled"
      offer_type: "buy" | "sell"
      offer_status: "open" | "matched" | "completed" | "cancelled" | "expired"
      kyc_document_type: "bvn" | "national_id" | "passport" | "drivers_license" | "selfie"
      kyc_status: "pending_submission" | "pending_review" | "approved" | "rejected"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Simpler aliases for easier use
export type Profile = Database["public"]["Tables"]["profiles"]["Row"]
export type Wallet = Database["public"]["Tables"]["wallets"]["Row"]
export type Transaction = Database["public"]["Tables"]["transactions"]["Row"]
export type KycRequest = Database["public"]["Tables"]["kyc_requests"]["Row"]
